import random
def drawboard(board):
    print('  |   | ')
    print(' '+board[7]+' | '+board[8]+'  | ' +board[9]+' ')
    print('  |   | ')
    print("__________")
    print('  |   | ')
    print(' '+board[4]+' | '+board[5]+'  | ' +board[6]+' ')
    print('  |   | ')
    print("__________")
    print('  |   | ')
    print(' '+board[1]+' | '+board[2]+'  | ' +board[3]+' ')
    print('  |   | ')

def inputplayersletter():
    letter=' '
    while not (letter=='x' or letter=='o'):
        print("do you want which letter(x or o)?")
        letter=input().upper()
    if letter =='X':
        return ['X','O']
    else:
        return ['O','X']

def whogoesfirst():
    if random.randint(0,1)==0:
         return 'computer'
    else:
         return 'players'

def playagain():
    print("do you want to play again(yes or no)")
    return input().lower().startswith('y')
#creating a move
def makeMove(board,letter,move):
    board[move]=letter
def isWinner(bo,le):
    return ((bo[7]==le and bo[8]==le and bo[9]==le)or #across the top
        (bo[4]==le and bo[5]==le and bo[6]==le)or #across the middle
        (bo[1]==le and bo[2]==le and bo[3]==le)or
        (bo[7]==le and bo[4]==le and bo[1]==le)or
        (bo[8]==le and bo[5]==le and bo[2]==le)or
        (bo[9]==le and bo[6]==le and bo[3]==le)or
        (bo[7]==le and bo[5]==le and bo[3]==le)or
        (bo[9]==le and bo[5]==le and bo[1]==le))

def getBoardcopy(board):
    dupboard=[]
    for i in board:
        dupboard.append[i]
    return dupboard
def isSpaceFree(board,move):
    return board[move]==' '
def getplayermove(board):
    move=' '
    while move not in '1 2 3 4 5 6 7 8 9'.split() or not isSpaceFree(board,int(move)):
        print("enter ur move(1-9)")
        move=input()
        return int(move)
def chooseRandommoveFromlist(board,moveslist):
    possiblemoves=[]
    for i in moveslist:
        if isSpaceFree(board,i):
            possiblemoves.append[i]
            if len(possiblemoves)!=0:
               return random.choice(possiblemoves)
            else:
               return None
def getComputermove(board,computerletter):
    if computerletter=='X':
        playerletter='O'
    else:
        playerletter='X'
    for i in range(1,10):
        copy=getBoardcopy(board)
        if isSpaceFree(copy,i):
            makeMove(copy,computerletter,i)
            if isWinner(copy,computerletter):
                 return i
#if playerchecks if it can win in one move
    for i in range(1,10):
        copy=getBoardcopy(board)
    if isSpaceFree(copy,i):
        makeMove(copy,playerletter)
        if isWinner(copy,playerletter):
            return i
#checking for sides
    move=chooseRandommoveFromlist(board,[1,3,7,9])
    if move!=None:
        return move
    #try to check if center is free or not
    if isSpaceFree(board,5):
        return 5
    #try to check for border
    return chooseRandommoveFromlist(board,[2,4,6,8])
# check for board is free
def isBoardfull(board):
    for i in range(1,10):
        if isSpaceFree(board,i):
            return False
        return True
print("welcome to tic toc tie game")
while True:
    Board=['']*10
    computerletter,playerletter=inputplayersletter()
    turn=whogoesfirst()
    print("the"+turn+"goes first")
    gameisplaying=True
    while gameisplaying:
        if turn=="player":
            drawboard(Board)
            move=getplayermove(Board)
            makeMove(Board,playerletter,move)
            if isWinner(Board,playerletter):
                drawboard(Board)
                print("you won the game")
                gameisplaying=False
            else:
                if isBoardfull(Board):
                    drawboard(Board)
                    print("the game is tied")
                    break
                else:
                   turn='computer'

        else:
            move=getComputermove(Board,computerletter)
            makeMove(Board,computerletter,move)
            if isWinner(Board,computerletter):
                drawboard(Board)
                print("computer won the game")
                gameisplaying=False
            else:
                if isBoardfull(Board):
                    drawboard(Board)
                    print("the game is tied")
                    break
                else:
                    turn='player'




















